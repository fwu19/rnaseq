
/*
* Default params
*/
params {
    input = "$projectDir/assets/dummy_file.csv"
    metadata = "$projectDir/assets/dummy_file.csv"
    input_dir = "$projectDir/assets/dummy_dir/"
    comparison = null
    
    outdir = './Analysis/'

    publish_dir_mode = 'copy'

    step = "mapping" // expression_quantification, differential_expression
    tools = "fastqc,rnaseqc,rseqc,star,bwa-mem,salmon,arriba" // fastqc,rnaseqc,rseqc,star,bwa-mem,salmon,arriba
    skip_tools = "none"

    build_index = false // only make index
    infer_experiment = false // only infer experiment
    qc_fastq = false
    qc_alignment = false
    gene_level = true
    transcript_expression = false
    gene_fusion = false

    workflow = 'regular' // exome,pdx
    
    cat_fastq = true // will cat fastq if multiple fastq per sample
    split_fastq = false
    
    aligner_index = null // can be multiple separated by comma
    aligner = 'star'
    star = null
    star_host = null
    bwa = null
    bwa_host = null

    genome = 'target_genome'
    genome_fa = null
    gtf = null
    rnaseqc_gtf = null
    rseqc_bed = null
    gene_txt = null
    tx_bed = null
    tx_fa = null
    tx_txt = null

    genome_host = 'host_genome'
    genome_fa_host = null

    split_size = 50000000
    strand = 2
    read_type = "PE"
    fdr = 0.05
    fc = 1.5
    fdr2 = 0.01
    fc2 = 2
    length_col = null
    de_gene_txt = null
    de_gene_type = null

    
}    

// Load base.config by default for all pipelines
includeConfig "conf/base.config"

// Load flowswitch.config
includeConfig "conf/flowswitch.config"

// Load modules.config for DSL2 module specific options
includeConfig "conf/modules.config"

if (params.workflow == 'pdx' ){
    includeConfig "conf/pdx.config"
    if (params.run_split_fastq){
        includeConfig "conf/pdx_split.config"
    }
}

/*
*
*/
// Capture exit codes from upstream processes when piping
process.shell = ["/bin/bash", "-euo", "pipefail"]

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline.html"
    overwrite = true
}

report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report.html"
    overwrite = true
}

trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace.txt"
    overwrite = true
}

dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag.html"
    overwrite = true
}

