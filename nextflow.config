workDir = '/hpc/temp/_SR/Genomics/users/nextflow/rnaseq/work'

singularity {
    enabled = true
    autoMounts = true
    cacheDir = '/fh/fast/_SR/Genomics/proj/fwu/nextflow/cache'
    runOptions = '--containall --no-home --bind \${SINGULARITY_TMPDIR}:/hpc/temp/_SR/Genomics/users/nextflow/cache'
    pullTimeout = '60 min'
    tmp = 'auto'
}

process {
    executor = 'slurm'
    queue = 'campus-new'
	errorStrategy = 'retry'
	maxRetries = 3
}

report {
    enabled = true
    file = "nextflow.report.html"
    overwrite = true
}

env {
	MPLCONFIGDIR = '/hpc/temp/_SR/Genomics/users/nextflow/cache'
    SINGULARITY_TMPDIR = '/hpc/temp/_SR/Genomics/users/nextflow/cache'
    TMPDIR = '/hpc/temp/_SR/Genomics/users/nextflow/cache'
    R_LIBS = '/fh/fast/_SR/Genomics/proj/fwu/R/4.1' 
}

params {
    input = null
    publish_dir_mode = 'copy'
    outdir = './Analysis/'

    cat_fastq = true
    run_alignment = false
    run_qc = false
    run_fastqc = false
    run_rnaseqc = false
    run_rseqc = false
    run_hs_metrics = false
    run_multiqc = false
    run_de = false

    workflow_regular = true
    workflow_pdx = false
    workflow_exome = false
}    

if (params.workflow_regular){
    params.worflow_pdx = false
    params.workflow_exome = false
}
if (params.workflow_pdx){
    params.workflow_regular = false
    params.workflow_exome = false
}

if (params.workflow_exome){
    params.workflow_regular = false
    params.workflow_pdx = false
}

if (!params.run_alignment){
        params.run_rnaseqc = false
        params.run_rseqc = false
}

if (!params.run_qc) {
        params.run_fastqc = false
        params.run_rnaseqc = false
        params.run_rseqc = false
        params.run_hs_metrics = false
        params.run_multiqc = false
}

// Capture exit codes from upstream processes when piping
process.shell = ["/bin/bash", "-euo", "pipefail"]

def trace_timestamp = new java.util.Date().format( "yyyy-MM-dd_HH-mm-ss")
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline.html"
    overwrite = true
}

report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report.html"
    overwrite = true
}

trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace.txt"
    overwrite = true
}

dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag.html"
    overwrite = true
}

